//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.db
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DevourInvEntities : DbContext
    {
        public DevourInvEntities()
            : base("name=DevourInvEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<INV_BinCard> INV_BinCard { get; set; }
        public virtual DbSet<INV_Brand> INV_Brand { get; set; }
        public virtual DbSet<INV_Category> INV_Category { get; set; }
        public virtual DbSet<INV_Department> INV_Department { get; set; }
        public virtual DbSet<INV_Issue> INV_Issue { get; set; }
        public virtual DbSet<INV_IssueDtls> INV_IssueDtls { get; set; }
        public virtual DbSet<INV_Machine> INV_Machine { get; set; }
        public virtual DbSet<INV_MaterialReceive> INV_MaterialReceive { get; set; }
        public virtual DbSet<INV_MaterialReceiveDtls> INV_MaterialReceiveDtls { get; set; }
        public virtual DbSet<INV_Model> INV_Model { get; set; }
        public virtual DbSet<INV_MRR> INV_MRR { get; set; }
        public virtual DbSet<INV_MRR_HO> INV_MRR_HO { get; set; }
        public virtual DbSet<INV_MRR_HODtls> INV_MRR_HODtls { get; set; }
        public virtual DbSet<INV_MRRDtls> INV_MRRDtls { get; set; }
        public virtual DbSet<INV_OpeningStock> INV_OpeningStock { get; set; }
        public virtual DbSet<INV_PO> INV_PO { get; set; }
        public virtual DbSet<INV_PODtls> INV_PODtls { get; set; }
        public virtual DbSet<INV_Product> INV_Product { get; set; }
        public virtual DbSet<INV_ProductBin> INV_ProductBin { get; set; }
        public virtual DbSet<INV_ProductDepartment> INV_ProductDepartment { get; set; }
        public virtual DbSet<INV_ProductSize> INV_ProductSize { get; set; }
        public virtual DbSet<INV_QC> INV_QC { get; set; }
        public virtual DbSet<INV_QCDtls> INV_QCDtls { get; set; }
        public virtual DbSet<INV_Return> INV_Return { get; set; }
        public virtual DbSet<INV_ReturnDtls> INV_ReturnDtls { get; set; }
        public virtual DbSet<INV_ScrapReturn> INV_ScrapReturn { get; set; }
        public virtual DbSet<INV_ScrapReturnDtls> INV_ScrapReturnDtls { get; set; }
        public virtual DbSet<INV_Size> INV_Size { get; set; }
        public virtual DbSet<INV_SPR> INV_SPR { get; set; }
        public virtual DbSet<INV_SPRDtls> INV_SPRDtls { get; set; }
        public virtual DbSet<INV_SR> INV_SR { get; set; }
        public virtual DbSet<INV_SRDtls> INV_SRDtls { get; set; }
        public virtual DbSet<INV_Stock> INV_Stock { get; set; }
        public virtual DbSet<INV_StoreBin> INV_StoreBin { get; set; }
        public virtual DbSet<INV_StoreRack> INV_StoreRack { get; set; }
        public virtual DbSet<INV_SubCategory> INV_SubCategory { get; set; }
        public virtual DbSet<INV_Supplier> INV_Supplier { get; set; }
        public virtual DbSet<INV_SupplierProduct> INV_SupplierProduct { get; set; }
        public virtual DbSet<INV_Transfer> INV_Transfer { get; set; }
        public virtual DbSet<INV_TransferDtls> INV_TransferDtls { get; set; }
        public virtual DbSet<INV_Type> INV_Type { get; set; }
        public virtual DbSet<INV_Unit> INV_Unit { get; set; }
        public virtual DbSet<OrganizationCore> OrganizationCores { get; set; }
        public virtual DbSet<SEC_LoginStatus> SEC_LoginStatus { get; set; }
        public virtual DbSet<SEC_Password> SEC_Password { get; set; }
        public virtual DbSet<SEC_SecurityQuestion> SEC_SecurityQuestion { get; set; }
        public virtual DbSet<SEC_UIModule> SEC_UIModule { get; set; }
        public virtual DbSet<SEC_UIPage> SEC_UIPage { get; set; }
        public virtual DbSet<SEC_UserActionMapping> SEC_UserActionMapping { get; set; }
        public virtual DbSet<SEC_UserGroup> SEC_UserGroup { get; set; }
        public virtual DbSet<SEC_UserInformation> SEC_UserInformation { get; set; }
        public virtual DbSet<SET_Company> SET_Company { get; set; }
        public virtual DbSet<SET_CompanyBranch> SET_CompanyBranch { get; set; }
        public virtual DbSet<SET_Country> SET_Country { get; set; }
        public virtual DbSet<SET_Currency> SET_Currency { get; set; }
        public virtual DbSet<SET_Department> SET_Department { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<BasicInfoFrGetPassAndDC_Result> BasicInfoFrGetPassAndDC(Nullable<int> iPOID)
        {
            var iPOIDParameter = iPOID.HasValue ?
                new ObjectParameter("iPOID", iPOID) :
                new ObjectParameter("iPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BasicInfoFrGetPassAndDC_Result>("BasicInfoFrGetPassAndDC", iPOIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_GenerateCode(Nullable<System.DateTime> iDate, string iTbl, string iFieldName, string iPrefix, ObjectParameter oCode)
        {
            var iDateParameter = iDate.HasValue ?
                new ObjectParameter("iDate", iDate) :
                new ObjectParameter("iDate", typeof(System.DateTime));
    
            var iTblParameter = iTbl != null ?
                new ObjectParameter("iTbl", iTbl) :
                new ObjectParameter("iTbl", typeof(string));
    
            var iFieldNameParameter = iFieldName != null ?
                new ObjectParameter("iFieldName", iFieldName) :
                new ObjectParameter("iFieldName", typeof(string));
    
            var iPrefixParameter = iPrefix != null ?
                new ObjectParameter("iPrefix", iPrefix) :
                new ObjectParameter("iPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GenerateCode", iDateParameter, iTblParameter, iFieldNameParameter, iPrefixParameter, oCode);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_IndentPR_Report_Result> sp_IndentPR_Report(Nullable<int> iSprID)
        {
            var iSprIDParameter = iSprID.HasValue ?
                new ObjectParameter("iSprID", iSprID) :
                new ObjectParameter("iSprID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IndentPR_Report_Result>("sp_IndentPR_Report", iSprIDParameter);
        }
    
        public virtual ObjectResult<sp_IssueList_Result> sp_IssueList(Nullable<int> iSrID)
        {
            var iSrIDParameter = iSrID.HasValue ?
                new ObjectParameter("iSrID", iSrID) :
                new ObjectParameter("iSrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IssueList_Result>("sp_IssueList", iSrIDParameter);
        }
    
        public virtual ObjectResult<sp_IssueReport_Result> sp_IssueReport(Nullable<int> iIssueID)
        {
            var iIssueIDParameter = iIssueID.HasValue ?
                new ObjectParameter("iIssueID", iIssueID) :
                new ObjectParameter("iIssueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IssueReport_Result>("sp_IssueReport", iIssueIDParameter);
        }
    
        public virtual ObjectResult<sp_ItemReturnDtls_Result> sp_ItemReturnDtls(Nullable<int> iTransferID)
        {
            var iTransferIDParameter = iTransferID.HasValue ?
                new ObjectParameter("iTransferID", iTransferID) :
                new ObjectParameter("iTransferID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemReturnDtls_Result>("sp_ItemReturnDtls", iTransferIDParameter);
        }
    
        public virtual ObjectResult<sp_ItemReturnDtlsForSTW_Result> sp_ItemReturnDtlsForSTW(Nullable<int> iIssueID)
        {
            var iIssueIDParameter = iIssueID.HasValue ?
                new ObjectParameter("iIssueID", iIssueID) :
                new ObjectParameter("iIssueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemReturnDtlsForSTW_Result>("sp_ItemReturnDtlsForSTW", iIssueIDParameter);
        }
    
        public virtual ObjectResult<sp_ItemReturnDtlsForWTS_Result> sp_ItemReturnDtlsForWTS(Nullable<int> iPOID)
        {
            var iPOIDParameter = iPOID.HasValue ?
                new ObjectParameter("iPOID", iPOID) :
                new ObjectParameter("iPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemReturnDtlsForWTS_Result>("sp_ItemReturnDtlsForWTS", iPOIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrDtls_Report_Result> sp_MrrDtls_Report(Nullable<int> iMRRID)
        {
            var iMRRIDParameter = iMRRID.HasValue ?
                new ObjectParameter("iMRRID", iMRRID) :
                new ObjectParameter("iMRRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrDtls_Report_Result>("sp_MrrDtls_Report", iMRRIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrDtlsList_Result> sp_MrrDtlsList(Nullable<int> iPOID)
        {
            var iPOIDParameter = iPOID.HasValue ?
                new ObjectParameter("iPOID", iPOID) :
                new ObjectParameter("iPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrDtlsList_Result>("sp_MrrDtlsList", iPOIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrDtlsList_ForEdit_Result> sp_MrrDtlsList_ForEdit(Nullable<int> iMRRID)
        {
            var iMRRIDParameter = iMRRID.HasValue ?
                new ObjectParameter("iMRRID", iMRRID) :
                new ObjectParameter("iMRRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrDtlsList_ForEdit_Result>("sp_MrrDtlsList_ForEdit", iMRRIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrHODtls_Report_Result> sp_MrrHODtls_Report(Nullable<int> iMRRID)
        {
            var iMRRIDParameter = iMRRID.HasValue ?
                new ObjectParameter("iMRRID", iMRRID) :
                new ObjectParameter("iMRRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrHODtls_Report_Result>("sp_MrrHODtls_Report", iMRRIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrHODtlsList_Result> sp_MrrHODtlsList(Nullable<int> iPOID, Nullable<int> iSPRID)
        {
            var iPOIDParameter = iPOID.HasValue ?
                new ObjectParameter("iPOID", iPOID) :
                new ObjectParameter("iPOID", typeof(int));
    
            var iSPRIDParameter = iSPRID.HasValue ?
                new ObjectParameter("iSPRID", iSPRID) :
                new ObjectParameter("iSPRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrHODtlsList_Result>("sp_MrrHODtlsList", iPOIDParameter, iSPRIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrHODtlsListForMRS_Result> sp_MrrHODtlsListForMRS(Nullable<int> iMRRID)
        {
            var iMRRIDParameter = iMRRID.HasValue ?
                new ObjectParameter("iMRRID", iMRRID) :
                new ObjectParameter("iMRRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrHODtlsListForMRS_Result>("sp_MrrHODtlsListForMRS", iMRRIDParameter);
        }
    
        public virtual ObjectResult<sp_MRRSDtls_Result> sp_MRRSDtls(Nullable<int> ireceiveID)
        {
            var ireceiveIDParameter = ireceiveID.HasValue ?
                new ObjectParameter("ireceiveID", ireceiveID) :
                new ObjectParameter("ireceiveID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MRRSDtls_Result>("sp_MRRSDtls", ireceiveIDParameter);
        }
    
        public virtual ObjectResult<sp_MRRSDtlsList_Result> sp_MRRSDtlsList(Nullable<int> iMrrID)
        {
            var iMrrIDParameter = iMrrID.HasValue ?
                new ObjectParameter("iMrrID", iMrrID) :
                new ObjectParameter("iMrrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MRRSDtlsList_Result>("sp_MRRSDtlsList", iMrrIDParameter);
        }
    
        public virtual ObjectResult<sp_MRRSDtlsList2_Result> sp_MRRSDtlsList2(Nullable<int> iPOID)
        {
            var iPOIDParameter = iPOID.HasValue ?
                new ObjectParameter("iPOID", iPOID) :
                new ObjectParameter("iPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MRRSDtlsList2_Result>("sp_MRRSDtlsList2", iPOIDParameter);
        }
    
        public virtual ObjectResult<sp_MRRSDtlsList3_Result> sp_MRRSDtlsList3(Nullable<int> iMrrID)
        {
            var iMrrIDParameter = iMrrID.HasValue ?
                new ObjectParameter("iMrrID", iMrrID) :
                new ObjectParameter("iMrrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MRRSDtlsList3_Result>("sp_MRRSDtlsList3", iMrrIDParameter);
        }
    
        public virtual ObjectResult<sp_MrrStoreReport_Result> sp_MrrStoreReport(Nullable<int> iReceivedID)
        {
            var iReceivedIDParameter = iReceivedID.HasValue ?
                new ObjectParameter("iReceivedID", iReceivedID) :
                new ObjectParameter("iReceivedID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MrrStoreReport_Result>("sp_MrrStoreReport", iReceivedIDParameter);
        }
    
        public virtual ObjectResult<sp_MRS_For_QCDtlsList_Result> sp_MRS_For_QCDtlsList(Nullable<int> iQCID)
        {
            var iQCIDParameter = iQCID.HasValue ?
                new ObjectParameter("iQCID", iQCID) :
                new ObjectParameter("iQCID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MRS_For_QCDtlsList_Result>("sp_MRS_For_QCDtlsList", iQCIDParameter);
        }
    
        public virtual int sp_Organization_Update(Nullable<int> iOrganizationId, string iOrganizationName, string iRegisteredPerson, Nullable<byte> iOrganizationMode, string iOrganizationAddress, string iPosTCode, string iCity, string iCountry, string iPhone, string iFax, string iEmail, string iWeb, ObjectParameter rErr)
        {
            var iOrganizationIdParameter = iOrganizationId.HasValue ?
                new ObjectParameter("iOrganizationId", iOrganizationId) :
                new ObjectParameter("iOrganizationId", typeof(int));
    
            var iOrganizationNameParameter = iOrganizationName != null ?
                new ObjectParameter("iOrganizationName", iOrganizationName) :
                new ObjectParameter("iOrganizationName", typeof(string));
    
            var iRegisteredPersonParameter = iRegisteredPerson != null ?
                new ObjectParameter("iRegisteredPerson", iRegisteredPerson) :
                new ObjectParameter("iRegisteredPerson", typeof(string));
    
            var iOrganizationModeParameter = iOrganizationMode.HasValue ?
                new ObjectParameter("iOrganizationMode", iOrganizationMode) :
                new ObjectParameter("iOrganizationMode", typeof(byte));
    
            var iOrganizationAddressParameter = iOrganizationAddress != null ?
                new ObjectParameter("iOrganizationAddress", iOrganizationAddress) :
                new ObjectParameter("iOrganizationAddress", typeof(string));
    
            var iPosTCodeParameter = iPosTCode != null ?
                new ObjectParameter("iPosTCode", iPosTCode) :
                new ObjectParameter("iPosTCode", typeof(string));
    
            var iCityParameter = iCity != null ?
                new ObjectParameter("iCity", iCity) :
                new ObjectParameter("iCity", typeof(string));
    
            var iCountryParameter = iCountry != null ?
                new ObjectParameter("iCountry", iCountry) :
                new ObjectParameter("iCountry", typeof(string));
    
            var iPhoneParameter = iPhone != null ?
                new ObjectParameter("iPhone", iPhone) :
                new ObjectParameter("iPhone", typeof(string));
    
            var iFaxParameter = iFax != null ?
                new ObjectParameter("iFax", iFax) :
                new ObjectParameter("iFax", typeof(string));
    
            var iEmailParameter = iEmail != null ?
                new ObjectParameter("iEmail", iEmail) :
                new ObjectParameter("iEmail", typeof(string));
    
            var iWebParameter = iWeb != null ?
                new ObjectParameter("iWeb", iWeb) :
                new ObjectParameter("iWeb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Organization_Update", iOrganizationIdParameter, iOrganizationNameParameter, iRegisteredPersonParameter, iOrganizationModeParameter, iOrganizationAddressParameter, iPosTCodeParameter, iCityParameter, iCountryParameter, iPhoneParameter, iFaxParameter, iEmailParameter, iWebParameter, rErr);
        }
    
        public virtual ObjectResult<sp_PendingPurchaseOdrList_Result> sp_PendingPurchaseOdrList(Nullable<int> iSprID)
        {
            var iSprIDParameter = iSprID.HasValue ?
                new ObjectParameter("iSprID", iSprID) :
                new ObjectParameter("iSprID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PendingPurchaseOdrList_Result>("sp_PendingPurchaseOdrList", iSprIDParameter);
        }
    
        public virtual ObjectResult<sp_ProductSearch_Result> sp_ProductSearch(string iName, Nullable<int> iid)
        {
            var iNameParameter = iName != null ?
                new ObjectParameter("iName", iName) :
                new ObjectParameter("iName", typeof(string));
    
            var iidParameter = iid.HasValue ?
                new ObjectParameter("iid", iid) :
                new ObjectParameter("iid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductSearch_Result>("sp_ProductSearch", iNameParameter, iidParameter);
        }
    
        public virtual ObjectResult<SP_ProductSearchPagination_Result> SP_ProductSearchPagination(string iNamevalue, Nullable<int> iPageindex, Nullable<int> iPagesize)
        {
            var iNamevalueParameter = iNamevalue != null ?
                new ObjectParameter("iNamevalue", iNamevalue) :
                new ObjectParameter("iNamevalue", typeof(string));
    
            var iPageindexParameter = iPageindex.HasValue ?
                new ObjectParameter("iPageindex", iPageindex) :
                new ObjectParameter("iPageindex", typeof(int));
    
            var iPagesizeParameter = iPagesize.HasValue ?
                new ObjectParameter("iPagesize", iPagesize) :
                new ObjectParameter("iPagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ProductSearchPagination_Result>("SP_ProductSearchPagination", iNamevalueParameter, iPageindexParameter, iPagesizeParameter);
        }
    
        public virtual ObjectResult<sp_PurchaseOdrDtlsList_Result> sp_PurchaseOdrDtlsList(Nullable<int> iPoid)
        {
            var iPoidParameter = iPoid.HasValue ?
                new ObjectParameter("iPoid", iPoid) :
                new ObjectParameter("iPoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PurchaseOdrDtlsList_Result>("sp_PurchaseOdrDtlsList", iPoidParameter);
        }
    
        public virtual ObjectResult<sp_PurchaseOdrDtlsListForReport_Result> sp_PurchaseOdrDtlsListForReport(Nullable<int> iPoid)
        {
            var iPoidParameter = iPoid.HasValue ?
                new ObjectParameter("iPoid", iPoid) :
                new ObjectParameter("iPoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PurchaseOdrDtlsListForReport_Result>("sp_PurchaseOdrDtlsListForReport", iPoidParameter);
        }
    
        public virtual ObjectResult<sp_PurchaseOdrList_Result> sp_PurchaseOdrList(Nullable<int> iSprID)
        {
            var iSprIDParameter = iSprID.HasValue ?
                new ObjectParameter("iSprID", iSprID) :
                new ObjectParameter("iSprID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PurchaseOdrList_Result>("sp_PurchaseOdrList", iSprIDParameter);
        }
    
        public virtual ObjectResult<sp_PurchaseOrderAppList_Result> sp_PurchaseOrderAppList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PurchaseOrderAppList_Result>("sp_PurchaseOrderAppList");
        }
    
        public virtual ObjectResult<sp_QCDtlsList_Result> sp_QCDtlsList(Nullable<int> iMaterialReceiveID)
        {
            var iMaterialReceiveIDParameter = iMaterialReceiveID.HasValue ?
                new ObjectParameter("iMaterialReceiveID", iMaterialReceiveID) :
                new ObjectParameter("iMaterialReceiveID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_QCDtlsList_Result>("sp_QCDtlsList", iMaterialReceiveIDParameter);
        }
    
        public virtual ObjectResult<sp_QcList_Result> sp_QcList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_QcList_Result>("sp_QcList");
        }
    
        public virtual ObjectResult<sp_QCReport_DtlsList_Result> sp_QCReport_DtlsList(Nullable<int> iQCID)
        {
            var iQCIDParameter = iQCID.HasValue ?
                new ObjectParameter("iQCID", iQCID) :
                new ObjectParameter("iQCID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_QCReport_DtlsList_Result>("sp_QCReport_DtlsList", iQCIDParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_ReturnMRRSDtlsList_Result> sp_ReturnMRRSDtlsList(Nullable<int> iPOID)
        {
            var iPOIDParameter = iPOID.HasValue ?
                new ObjectParameter("iPOID", iPOID) :
                new ObjectParameter("iPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReturnMRRSDtlsList_Result>("sp_ReturnMRRSDtlsList", iPOIDParameter);
        }
    
        public virtual int sp_SaveCsvProduct(ObjectParameter rError)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveCsvProduct", rError);
        }
    
        public virtual int sp_SaveIssue(Nullable<int> iIssueID, Nullable<int> iSRID, string iIssueNO, Nullable<System.DateTime> iIssueDate, string iStatus, Nullable<int> iCreatedBy, Nullable<int> iUpdatedBy, ObjectParameter rError, ObjectParameter rIssueID)
        {
            var iIssueIDParameter = iIssueID.HasValue ?
                new ObjectParameter("iIssueID", iIssueID) :
                new ObjectParameter("iIssueID", typeof(int));
    
            var iSRIDParameter = iSRID.HasValue ?
                new ObjectParameter("iSRID", iSRID) :
                new ObjectParameter("iSRID", typeof(int));
    
            var iIssueNOParameter = iIssueNO != null ?
                new ObjectParameter("iIssueNO", iIssueNO) :
                new ObjectParameter("iIssueNO", typeof(string));
    
            var iIssueDateParameter = iIssueDate.HasValue ?
                new ObjectParameter("iIssueDate", iIssueDate) :
                new ObjectParameter("iIssueDate", typeof(System.DateTime));
    
            var iStatusParameter = iStatus != null ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(string));
    
            var iCreatedByParameter = iCreatedBy.HasValue ?
                new ObjectParameter("iCreatedBy", iCreatedBy) :
                new ObjectParameter("iCreatedBy", typeof(int));
    
            var iUpdatedByParameter = iUpdatedBy.HasValue ?
                new ObjectParameter("iUpdatedBy", iUpdatedBy) :
                new ObjectParameter("iUpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveIssue", iIssueIDParameter, iSRIDParameter, iIssueNOParameter, iIssueDateParameter, iStatusParameter, iCreatedByParameter, iUpdatedByParameter, rError, rIssueID);
        }
    
        public virtual int sp_SaveMRR(Nullable<int> iMRRID, Nullable<int> iPOIDID, Nullable<int> iQCID, string iMRRNO, Nullable<System.DateTime> iMRRDate, string iSupplierInv, Nullable<int> iSupplierID, Nullable<decimal> iSubTotal, Nullable<decimal> iTotalDiscount, Nullable<decimal> iTotalVat, string iStatus, Nullable<int> iCreatedBy, Nullable<int> iUpdatedBy, ObjectParameter rError, ObjectParameter iLastID)
        {
            var iMRRIDParameter = iMRRID.HasValue ?
                new ObjectParameter("iMRRID", iMRRID) :
                new ObjectParameter("iMRRID", typeof(int));
    
            var iPOIDIDParameter = iPOIDID.HasValue ?
                new ObjectParameter("iPOIDID", iPOIDID) :
                new ObjectParameter("iPOIDID", typeof(int));
    
            var iQCIDParameter = iQCID.HasValue ?
                new ObjectParameter("iQCID", iQCID) :
                new ObjectParameter("iQCID", typeof(int));
    
            var iMRRNOParameter = iMRRNO != null ?
                new ObjectParameter("iMRRNO", iMRRNO) :
                new ObjectParameter("iMRRNO", typeof(string));
    
            var iMRRDateParameter = iMRRDate.HasValue ?
                new ObjectParameter("iMRRDate", iMRRDate) :
                new ObjectParameter("iMRRDate", typeof(System.DateTime));
    
            var iSupplierInvParameter = iSupplierInv != null ?
                new ObjectParameter("iSupplierInv", iSupplierInv) :
                new ObjectParameter("iSupplierInv", typeof(string));
    
            var iSupplierIDParameter = iSupplierID.HasValue ?
                new ObjectParameter("iSupplierID", iSupplierID) :
                new ObjectParameter("iSupplierID", typeof(int));
    
            var iSubTotalParameter = iSubTotal.HasValue ?
                new ObjectParameter("iSubTotal", iSubTotal) :
                new ObjectParameter("iSubTotal", typeof(decimal));
    
            var iTotalDiscountParameter = iTotalDiscount.HasValue ?
                new ObjectParameter("iTotalDiscount", iTotalDiscount) :
                new ObjectParameter("iTotalDiscount", typeof(decimal));
    
            var iTotalVatParameter = iTotalVat.HasValue ?
                new ObjectParameter("iTotalVat", iTotalVat) :
                new ObjectParameter("iTotalVat", typeof(decimal));
    
            var iStatusParameter = iStatus != null ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(string));
    
            var iCreatedByParameter = iCreatedBy.HasValue ?
                new ObjectParameter("iCreatedBy", iCreatedBy) :
                new ObjectParameter("iCreatedBy", typeof(int));
    
            var iUpdatedByParameter = iUpdatedBy.HasValue ?
                new ObjectParameter("iUpdatedBy", iUpdatedBy) :
                new ObjectParameter("iUpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveMRR", iMRRIDParameter, iPOIDIDParameter, iQCIDParameter, iMRRNOParameter, iMRRDateParameter, iSupplierInvParameter, iSupplierIDParameter, iSubTotalParameter, iTotalDiscountParameter, iTotalVatParameter, iStatusParameter, iCreatedByParameter, iUpdatedByParameter, rError, iLastID);
        }
    
        public virtual int sp_SaveOpeningStock(Nullable<int> iBranchID, Nullable<int> iCreatedBy, Nullable<System.DateTime> iCreatedDate, ObjectParameter rError)
        {
            var iBranchIDParameter = iBranchID.HasValue ?
                new ObjectParameter("iBranchID", iBranchID) :
                new ObjectParameter("iBranchID", typeof(int));
    
            var iCreatedByParameter = iCreatedBy.HasValue ?
                new ObjectParameter("iCreatedBy", iCreatedBy) :
                new ObjectParameter("iCreatedBy", typeof(int));
    
            var iCreatedDateParameter = iCreatedDate.HasValue ?
                new ObjectParameter("iCreatedDate", iCreatedDate) :
                new ObjectParameter("iCreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveOpeningStock", iBranchIDParameter, iCreatedByParameter, iCreatedDateParameter, rError);
        }
    
        public virtual int sp_SaveReturn(Nullable<int> iReturnID, Nullable<int> iSRID, Nullable<int> iTransferID, string iReturnNO, Nullable<System.DateTime> iReturnDate, Nullable<int> iReturnTypeID, string iReturnType, Nullable<int> iFromWarehouseID, Nullable<int> iToWarehouseID, Nullable<int> iFromStoreID, Nullable<int> iToStoreID, Nullable<int> iToSupplierID, Nullable<int> iPurchaseOrderID, string iStatus, ObjectParameter iLastInsertedID, ObjectParameter rError)
        {
            var iReturnIDParameter = iReturnID.HasValue ?
                new ObjectParameter("iReturnID", iReturnID) :
                new ObjectParameter("iReturnID", typeof(int));
    
            var iSRIDParameter = iSRID.HasValue ?
                new ObjectParameter("iSRID", iSRID) :
                new ObjectParameter("iSRID", typeof(int));
    
            var iTransferIDParameter = iTransferID.HasValue ?
                new ObjectParameter("iTransferID", iTransferID) :
                new ObjectParameter("iTransferID", typeof(int));
    
            var iReturnNOParameter = iReturnNO != null ?
                new ObjectParameter("iReturnNO", iReturnNO) :
                new ObjectParameter("iReturnNO", typeof(string));
    
            var iReturnDateParameter = iReturnDate.HasValue ?
                new ObjectParameter("iReturnDate", iReturnDate) :
                new ObjectParameter("iReturnDate", typeof(System.DateTime));
    
            var iReturnTypeIDParameter = iReturnTypeID.HasValue ?
                new ObjectParameter("iReturnTypeID", iReturnTypeID) :
                new ObjectParameter("iReturnTypeID", typeof(int));
    
            var iReturnTypeParameter = iReturnType != null ?
                new ObjectParameter("iReturnType", iReturnType) :
                new ObjectParameter("iReturnType", typeof(string));
    
            var iFromWarehouseIDParameter = iFromWarehouseID.HasValue ?
                new ObjectParameter("iFromWarehouseID", iFromWarehouseID) :
                new ObjectParameter("iFromWarehouseID", typeof(int));
    
            var iToWarehouseIDParameter = iToWarehouseID.HasValue ?
                new ObjectParameter("iToWarehouseID", iToWarehouseID) :
                new ObjectParameter("iToWarehouseID", typeof(int));
    
            var iFromStoreIDParameter = iFromStoreID.HasValue ?
                new ObjectParameter("iFromStoreID", iFromStoreID) :
                new ObjectParameter("iFromStoreID", typeof(int));
    
            var iToStoreIDParameter = iToStoreID.HasValue ?
                new ObjectParameter("iToStoreID", iToStoreID) :
                new ObjectParameter("iToStoreID", typeof(int));
    
            var iToSupplierIDParameter = iToSupplierID.HasValue ?
                new ObjectParameter("iToSupplierID", iToSupplierID) :
                new ObjectParameter("iToSupplierID", typeof(int));
    
            var iPurchaseOrderIDParameter = iPurchaseOrderID.HasValue ?
                new ObjectParameter("iPurchaseOrderID", iPurchaseOrderID) :
                new ObjectParameter("iPurchaseOrderID", typeof(int));
    
            var iStatusParameter = iStatus != null ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveReturn", iReturnIDParameter, iSRIDParameter, iTransferIDParameter, iReturnNOParameter, iReturnDateParameter, iReturnTypeIDParameter, iReturnTypeParameter, iFromWarehouseIDParameter, iToWarehouseIDParameter, iFromStoreIDParameter, iToStoreIDParameter, iToSupplierIDParameter, iPurchaseOrderIDParameter, iStatusParameter, iLastInsertedID, rError);
        }
    
        public virtual int sp_SaveSales(Nullable<int> iCardTypeID, string iCollectionType, Nullable<System.DateTime> iCollectionDate, string iCardNO, Nullable<decimal> iAmount, Nullable<int> iCreatedBy, Nullable<int> iUpdatedBy, Nullable<int> iCustomerID, Nullable<int> iCustomOrderID, Nullable<System.DateTime> iOrderDate, Nullable<System.DateTime> iDeliveryDate, Nullable<System.DateTime> iTrialDate, Nullable<decimal> iSubtotal, Nullable<decimal> iDiscount, Nullable<decimal> iProductVat, Nullable<decimal> iServiceVat, Nullable<decimal> iGrandTotal, string iStatus, ObjectParameter rError)
        {
            var iCardTypeIDParameter = iCardTypeID.HasValue ?
                new ObjectParameter("iCardTypeID", iCardTypeID) :
                new ObjectParameter("iCardTypeID", typeof(int));
    
            var iCollectionTypeParameter = iCollectionType != null ?
                new ObjectParameter("iCollectionType", iCollectionType) :
                new ObjectParameter("iCollectionType", typeof(string));
    
            var iCollectionDateParameter = iCollectionDate.HasValue ?
                new ObjectParameter("iCollectionDate", iCollectionDate) :
                new ObjectParameter("iCollectionDate", typeof(System.DateTime));
    
            var iCardNOParameter = iCardNO != null ?
                new ObjectParameter("iCardNO", iCardNO) :
                new ObjectParameter("iCardNO", typeof(string));
    
            var iAmountParameter = iAmount.HasValue ?
                new ObjectParameter("iAmount", iAmount) :
                new ObjectParameter("iAmount", typeof(decimal));
    
            var iCreatedByParameter = iCreatedBy.HasValue ?
                new ObjectParameter("iCreatedBy", iCreatedBy) :
                new ObjectParameter("iCreatedBy", typeof(int));
    
            var iUpdatedByParameter = iUpdatedBy.HasValue ?
                new ObjectParameter("iUpdatedBy", iUpdatedBy) :
                new ObjectParameter("iUpdatedBy", typeof(int));
    
            var iCustomerIDParameter = iCustomerID.HasValue ?
                new ObjectParameter("iCustomerID", iCustomerID) :
                new ObjectParameter("iCustomerID", typeof(int));
    
            var iCustomOrderIDParameter = iCustomOrderID.HasValue ?
                new ObjectParameter("iCustomOrderID", iCustomOrderID) :
                new ObjectParameter("iCustomOrderID", typeof(int));
    
            var iOrderDateParameter = iOrderDate.HasValue ?
                new ObjectParameter("iOrderDate", iOrderDate) :
                new ObjectParameter("iOrderDate", typeof(System.DateTime));
    
            var iDeliveryDateParameter = iDeliveryDate.HasValue ?
                new ObjectParameter("iDeliveryDate", iDeliveryDate) :
                new ObjectParameter("iDeliveryDate", typeof(System.DateTime));
    
            var iTrialDateParameter = iTrialDate.HasValue ?
                new ObjectParameter("iTrialDate", iTrialDate) :
                new ObjectParameter("iTrialDate", typeof(System.DateTime));
    
            var iSubtotalParameter = iSubtotal.HasValue ?
                new ObjectParameter("iSubtotal", iSubtotal) :
                new ObjectParameter("iSubtotal", typeof(decimal));
    
            var iDiscountParameter = iDiscount.HasValue ?
                new ObjectParameter("iDiscount", iDiscount) :
                new ObjectParameter("iDiscount", typeof(decimal));
    
            var iProductVatParameter = iProductVat.HasValue ?
                new ObjectParameter("iProductVat", iProductVat) :
                new ObjectParameter("iProductVat", typeof(decimal));
    
            var iServiceVatParameter = iServiceVat.HasValue ?
                new ObjectParameter("iServiceVat", iServiceVat) :
                new ObjectParameter("iServiceVat", typeof(decimal));
    
            var iGrandTotalParameter = iGrandTotal.HasValue ?
                new ObjectParameter("iGrandTotal", iGrandTotal) :
                new ObjectParameter("iGrandTotal", typeof(decimal));
    
            var iStatusParameter = iStatus != null ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveSales", iCardTypeIDParameter, iCollectionTypeParameter, iCollectionDateParameter, iCardNOParameter, iAmountParameter, iCreatedByParameter, iUpdatedByParameter, iCustomerIDParameter, iCustomOrderIDParameter, iOrderDateParameter, iDeliveryDateParameter, iTrialDateParameter, iSubtotalParameter, iDiscountParameter, iProductVatParameter, iServiceVatParameter, iGrandTotalParameter, iStatusParameter, rError);
        }
    
        public virtual int sp_SaveTransfer(Nullable<int> iTransferID, string iTransferNO, Nullable<System.DateTime> iTransferDate, Nullable<int> iFromStoreID, Nullable<int> iToStoreID, Nullable<int> iCreatedBy, Nullable<int> iUpdatedBy, string iStatus, ObjectParameter rError)
        {
            var iTransferIDParameter = iTransferID.HasValue ?
                new ObjectParameter("iTransferID", iTransferID) :
                new ObjectParameter("iTransferID", typeof(int));
    
            var iTransferNOParameter = iTransferNO != null ?
                new ObjectParameter("iTransferNO", iTransferNO) :
                new ObjectParameter("iTransferNO", typeof(string));
    
            var iTransferDateParameter = iTransferDate.HasValue ?
                new ObjectParameter("iTransferDate", iTransferDate) :
                new ObjectParameter("iTransferDate", typeof(System.DateTime));
    
            var iFromStoreIDParameter = iFromStoreID.HasValue ?
                new ObjectParameter("iFromStoreID", iFromStoreID) :
                new ObjectParameter("iFromStoreID", typeof(int));
    
            var iToStoreIDParameter = iToStoreID.HasValue ?
                new ObjectParameter("iToStoreID", iToStoreID) :
                new ObjectParameter("iToStoreID", typeof(int));
    
            var iCreatedByParameter = iCreatedBy.HasValue ?
                new ObjectParameter("iCreatedBy", iCreatedBy) :
                new ObjectParameter("iCreatedBy", typeof(int));
    
            var iUpdatedByParameter = iUpdatedBy.HasValue ?
                new ObjectParameter("iUpdatedBy", iUpdatedBy) :
                new ObjectParameter("iUpdatedBy", typeof(int));
    
            var iStatusParameter = iStatus != null ?
                new ObjectParameter("iStatus", iStatus) :
                new ObjectParameter("iStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SaveTransfer", iTransferIDParameter, iTransferNOParameter, iTransferDateParameter, iFromStoreIDParameter, iToStoreIDParameter, iCreatedByParameter, iUpdatedByParameter, iStatusParameter, rError);
        }
    
        public virtual ObjectResult<sp_ScrapReturn_Report_Result> sp_ScrapReturn_Report(Nullable<int> iScrapReturnID)
        {
            var iScrapReturnIDParameter = iScrapReturnID.HasValue ?
                new ObjectParameter("iScrapReturnID", iScrapReturnID) :
                new ObjectParameter("iScrapReturnID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ScrapReturn_Report_Result>("sp_ScrapReturn_Report", iScrapReturnIDParameter);
        }
    
        public virtual ObjectResult<sp_SprFRPendingPO_Result> sp_SprFRPendingPO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SprFRPendingPO_Result>("sp_SprFRPendingPO");
        }
    
        public virtual ObjectResult<sp_SRandIssueNoteReportList_Result> sp_SRandIssueNoteReportList(Nullable<int> iSrID)
        {
            var iSrIDParameter = iSrID.HasValue ?
                new ObjectParameter("iSrID", iSrID) :
                new ObjectParameter("iSrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SRandIssueNoteReportList_Result>("sp_SRandIssueNoteReportList", iSrIDParameter);
        }
    
        public virtual ObjectResult<sp_SRNOSearch_Result> sp_SRNOSearch(string iName)
        {
            var iNameParameter = iName != null ?
                new ObjectParameter("iName", iName) :
                new ObjectParameter("iName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SRNOSearch_Result>("sp_SRNOSearch", iNameParameter);
        }
    
        public virtual ObjectResult<sp_StockCheck_Result> sp_StockCheck(Nullable<int> iBranchID, Nullable<int> iCategoryID, Nullable<int> iProductID, Nullable<int> iUnitID)
        {
            var iBranchIDParameter = iBranchID.HasValue ?
                new ObjectParameter("iBranchID", iBranchID) :
                new ObjectParameter("iBranchID", typeof(int));
    
            var iCategoryIDParameter = iCategoryID.HasValue ?
                new ObjectParameter("iCategoryID", iCategoryID) :
                new ObjectParameter("iCategoryID", typeof(int));
    
            var iProductIDParameter = iProductID.HasValue ?
                new ObjectParameter("iProductID", iProductID) :
                new ObjectParameter("iProductID", typeof(int));
    
            var iUnitIDParameter = iUnitID.HasValue ?
                new ObjectParameter("iUnitID", iUnitID) :
                new ObjectParameter("iUnitID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StockCheck_Result>("sp_StockCheck", iBranchIDParameter, iCategoryIDParameter, iProductIDParameter, iUnitIDParameter);
        }
    
        public virtual int sp_StockList(string iBranchID, string iCategoryID, string iNamevalue, Nullable<int> iPageindex, Nullable<int> iPagesize)
        {
            var iBranchIDParameter = iBranchID != null ?
                new ObjectParameter("iBranchID", iBranchID) :
                new ObjectParameter("iBranchID", typeof(string));
    
            var iCategoryIDParameter = iCategoryID != null ?
                new ObjectParameter("iCategoryID", iCategoryID) :
                new ObjectParameter("iCategoryID", typeof(string));
    
            var iNamevalueParameter = iNamevalue != null ?
                new ObjectParameter("iNamevalue", iNamevalue) :
                new ObjectParameter("iNamevalue", typeof(string));
    
            var iPageindexParameter = iPageindex.HasValue ?
                new ObjectParameter("iPageindex", iPageindex) :
                new ObjectParameter("iPageindex", typeof(int));
    
            var iPagesizeParameter = iPagesize.HasValue ?
                new ObjectParameter("iPagesize", iPagesize) :
                new ObjectParameter("iPagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_StockList", iBranchIDParameter, iCategoryIDParameter, iNamevalueParameter, iPageindexParameter, iPagesizeParameter);
        }
    
        public virtual ObjectResult<sp_StockList2_Result> sp_StockList2(Nullable<int> iBranchID, Nullable<int> iCategoryID)
        {
            var iBranchIDParameter = iBranchID.HasValue ?
                new ObjectParameter("iBranchID", iBranchID) :
                new ObjectParameter("iBranchID", typeof(int));
    
            var iCategoryIDParameter = iCategoryID.HasValue ?
                new ObjectParameter("iCategoryID", iCategoryID) :
                new ObjectParameter("iCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StockList2_Result>("sp_StockList2", iBranchIDParameter, iCategoryIDParameter);
        }
    
        public virtual ObjectResult<sp_StoreReturnMemoDtls_Result> sp_StoreReturnMemoDtls(Nullable<int> returnID)
        {
            var returnIDParameter = returnID.HasValue ?
                new ObjectParameter("ReturnID", returnID) :
                new ObjectParameter("ReturnID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StoreReturnMemoDtls_Result>("sp_StoreReturnMemoDtls", returnIDParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
